function [] = generate_undistort_map_radtan(cinfo, sequence_name)
%GENERATE_UNDISTORT_MAP_RADTAN generates a mapping from distorted to 
%undistorted pixels in a given image wit radtan camera distortion, given 
%the camera intrinsics.
%
% Syntax: GENERATE_UNDISTORT_MAP_RADTAN(cinfo, sequence_name)
%
% Inputs:
%    cinfo         - camera info struct, generated by extract_ros_data.
%    sequence_name - string to be concatenated to the output name.
%
% See also EXTRACT_ROS_DATA
%
% Author: Alex Zihao Zhu, University of Pennsylvania
% Email: alexzhu(at)seas.upenn.edu
% Copyright 2018 University of Pennsylvania 
% Alex Zihao Zhu, Nikolay Atanasov, Kostas Daniilidis
%
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS, CONTRIBUTORS, AND THE 
% TRUSTEES OF THE UNIVERSITY OF PENNSYLVANIA "AS IS" AND ANY EXPRESS OR 
% IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
% OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
% IN NO EVENT SHALL THE COPYRIGHT OWNER, CONTRIBUTORS OR THE TRUSTEES OF 
% THE UNIVERSITY OF PENNSYLVANIA BE LIABLE FOR ANY DIRECT, INDIRECT, 
% INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
% NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
% DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
% THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
% (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF 
% THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

output_name = ['undistort_map_', sequence_name];
fprintf('Generating undistort maps and saving in %s. This may take some time.', ...
    output_name)

K = reshape(cinfo.K, 3, 3)';
D = cinfo.D;
rows = cinfo.height;
cols = cinfo.width;
cameraParams = cameraParameters(...
    'IntrinsicMatrix', K, ...
    'RadialDistortion', D(1:2), ...
    'TangentialDistortion', D(3:4));

undistort_map_x = zeros(rows, cols);
undistort_map_y = zeros(rows, cols);

[X, Y] = meshgrid(0:cols-1, 0:rows-1);
X = X(:);
Y = Y(:);
%step = 100
%for i=1:(rows*cols)/100
%    undistortedPoints = undistortPoints([X(step*(i-1)+1:step*i) Y(step*(i-1)+1:step*i)], cameraParams);
%    inds = 
%    (X(step*(i-1)+1:step*i)+1, Y(step*(i-1)+1:step*i)+1, [rows, cols]);
%    undistort_map_x(inds) = undistortedPoints(:, 1);
%    undistort_map_y(inds) = undistortedPoints(:, 2);
%    i*step
%end
sequence_name
['../undistort_map_', sequence_name, '.mat_x.csv']
undistort_map_x = csvread(['undistort_map_', sequence_name, '.mat_x.csv']);
undistort_map_y = csvread(['undistort_map_', sequence_name, '.mat_y.csv']);

save(output_name, 'undistort_map_x', 'undistort_map_y');
end